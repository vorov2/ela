<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>